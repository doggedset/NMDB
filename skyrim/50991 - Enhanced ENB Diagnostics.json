{
  "modId": 50991.0,
  "modName": "Enhanced ENB Diagnostics",
  "summary": "For ENB preset developers, code tweakers, and enthusiasts.    Shader functions for ENB that allow drawing of text as an overlay on the game screen for debug or other purposes.   No more guessing at what your variable values are.  For example, show the values of the _c registers, colors, etc.  Use with your own variables too.   Add titles to your pr",
  "descriptionHtml": "[b][color=red]Important Message[/color][/b]\r<br />This is not a full ENB preset.    It only replaces the enbeffect.fx file that is part of presets and the standard ENB distribution and adds another file EnhancedENBDiagnostics.fxh.    Either an ENB preset or the standard ENB distribution from www.enbedev.com need to be installed first.   Thanks&#33;\r<br />\r<br />\r<br />\r<br />[heading]Videos:[/heading]\r<br />Demo and Installation\r<br />[youtube]H-0NtAzNuoc[/youtube]\r<br />\r<br />\r<br />\r<br />[heading]Version History:[/heading]\r<br />\r<br />[heading]1.0[/heading]\r<br />-Converted functions from drawtext.frag GLSL shader\r<br />-Added convenience functions: \r<br />   -EED_drawText\r<br />   -EED_drawFloatText\r<br />   -EED_drawCRegisterText\r<br />   -EED_drawCRegistersText\r<br />   -EED_drawColorText\r<br />   -EED_drawTitleText\r<br />   (see below for function descriptions)\r<br />\r<br />-Added annotation and implementation code in enbeffect.fx to demo convenience functions\r<br />\r<br />\r<br />\r<br />[heading]Installation:[/heading]\r<br />See the video for installation instructions.   Quick installation:\r<br />1. Backup existing enbeffect.fx file in game folder\r<br />2. Copy contents of downloaded .7z into game folder\r<br />3. Run game\r<br />4. Press &lt;Shift&gt;&lt;Enter&gt; to open ENB interface\r<br />5. Turn on Enhaced Enb Diagnostics in the ENB  &#34;Shader Window&#34;\r<br />\r<br />\r<br />\r<br />[heading]Description:[/heading]\r<br />Coding for enb can be a fun process.  Debugging, not so much.   Luckily, the introduction of annotation gui controls allowed easier input debugging.   However, as far as I know, there is no good way to get output for debugging.  So, as I currently am dealing with this issue while developing my Enhanced ENB Night Eye mod, I decided to try and make the situation better for myself and hopefully for all developers.   I had a hunch that someone also faced this same issue, and a quick Google search turned up almost exactly what I wanted at:\r<br />\r<br />http://mew.cx/drawtext/drawtext.html\r<br />\r<br />So thanks to Michael E. Weiblen at the site above, all of the most difficult the leg work was already done.   All I had to do was convert his GLSL code into HLSL which was the most part (except where noted in the file) was straight forward.    I then worked on it for a bit more and added some basic functions that would be useful to me as an ENB shader developer.   Take a look at the video at the top for more information and a demo.\r<br />\r<br />\r<br />\r<br />[heading]Features:[/heading]\r<br />* Draw ENB debugging text as game overlay&#33;\r<br />\r<br />* When using the default included enbeffect.fx file, enabling the mod in the in the game shader window will draw the following text:\r<br />    - Title\r<br />    - RGB color value at specified location in screen uv coordinates\r<br />    - _c1 thru _c5 game registers\r<br />    - ENB Timer.x variable\r<br />\r<br />* Includes header file EnhancedENBDiagnostics.fxh\r<br />Developers can use the functions in the header file to draw their own text.  The first thing to do is  to add an #include statement to the header file in the file in which you want to use the functions.   For example, if you are working on enbeffect.fx, you can add the following line to the top of the file:\r<br />\r<br />#include &#34;EnhancedENBDiagnostics.fxh&#34;\r<br />\r<br />After that is done, you can then call any of the EED_ prefixed functions.   All of these functions return a color in a float4 variable so all you need to do is add the result of the function to the final color.   Usually this is a variable named &#34;_C0&#34; but might have another variable that is used before that like &#34;color&#34;.   See the included enbeffect.fx file for how to do this.\r<br />\r<br />[b]Note about ascii values:[/b]   So unfortunately coding your own text is a little tedious because, as far as I know, the HLSL shading language has no string or char types.   So we are stuck adding our text one argument at a time by finding each character&#39;s decimal code in the included ascii table.   If someone knows of a better way, please let me know.  But the labeling is secondary in my opinion, the real win here is seeing the values&#33;\r<br />\r<br />\r<br />\r<br />[header]Functions[/header]\r<br />Below I am including the current convenience/wrapper functions that I added and their descriptions.   They are included as they appear in the EnhancedENBDiagnostics.fxh file.\r<br />\r<br />[code]\r<br />///////////////////////////////////////////////////////////////////////////////\r<br />// EED_drawText:\r<br />// Draws 16 ascii chars of text contained in the .xyzw components\r<br />// of txt1 and txt2.  See ascii table at end of file for character\r<br />// values.   txCoords should be unmodified and set position\r<br />// and size using uvPosition and size args.\r<br />float4 EED_drawText(float4 txt1, float4 txt2, float4 txt3, float4 txt4, \r<br />float2 txCoords, float2 uvPosition, float size)\r<br />\r<br />///////////////////////////////////////////////////////////////////////////////\r<br />// EED_drawFloatText:\r<br />// Draws 8 ascii chars of text contained in the .xyzw components\r<br />// of txt1 and txt2.   txCoords should be unmodified and set position\r<br />// amnd size using uvPosition and size args.   Precision is where the\r<br />// drawing cutoff is, not actual precision.\r<br />float4 EED_drawFloatText(float4 txt1, float4 txt2, float val, float2 txCoords, \r<br />float2 uvPosition, float size, int precision)\r<br />\r<br />///////////////////////////////////////////////////////////////////////////////\r<br />// EED_drawCRegisterText:\r<br />// Draws  one of the _c register variables.\r<br />float4 EED_drawCRegisterText(float2 registerCoords, float4 _c, int cNumAscii, int precision)\r<br />\r<br />///////////////////////////////////////////////////////////////////////////////\r<br />// EED_drawCRegistersText:\r<br />// Draws the external register values.   Can only be used where available\r<br />// such as in enbeffect.fx in whiach the variables are defined like this:\r<br />//\r<br />// //skyrim shader specific externals, do not modify\r<br />// float4   _c1 : register(c1);\r<br />// float4   _c2 : register(c2);\r<br />// float4   _c3 : register(c3);\r<br />// float4   _c4 : register(c4);\r<br />// float4   _c5 : register(c5);\r<br />// \r<br />// Example call from enbeffect.fx:\r<br />//\r<br />//   color.xyz += EED_drawCRegistersText(_c1, _c2, _c3, _c4, _c5, \r<br />//      IN.txcoord0, float2(0.9, 0.2), 0.9, 5);\r<br />//\r<br />float4 EED_drawCRegistersText(float4 _c1, float4 _c2, float4 _c3, float4 _c4, float4 _c5, \r<br />float2 registerTxCoords, float2 uvPosition, float size, int precision)\r<br />\r<br />///////////////////////////////////////////////////////////////////////////////\r<br />// EED_drawColorText\r<br />// Draws text for a RGBA color variable.\r<br />//\r<br />float4 EED_drawColorText(float4 color, float2 colorTxCoords, float2 uvPosition, float size, int precision)\r<br />\r<br />///////////////////////////////////////////////////////////////////////////\r<br />// EED_drawTitleText\r<br />// Draw Title text by assigning values in arrays using ASCII reference\r<br />// table below.\r<br />[/code]\r<br />\r<br />\r<br />\r<br />\r<br />[heading]Future Development[/heading]\r<br />-Better color display (swatch, hsv, no alpha, etc.)\r<br />-Fading title based on Timer.x variable\r<br />-Other font texture (please help)\r<br />-Open to ideas.   Please add suggestions in the forum.\r<br />\r<br />\r<br />\r<br />[heading]Permission Notes[/heading]\r<br />Use and distribute freely but please keep the original from credits drawtext.frag within the EnhancedENBDiagnostics.fhx file  intact.   If you are displaying text on the screen using my functions as part of your mod, please display my title as part of the text you are displaying by running the function EED_drawTitleText() as demonstrated in the included enbeffect.fx file.  It can be moved, sized, and or faded.  Thanks.\r<br />\r<br />\r<br />\r<br />[heading]Credits[/heading]\r<br />Boris Vorontsov for ENB\r<br />www.enbdev.com\r<br />\r<br />Michael E. Weiblen\r<br />drawtext.frag GLSL shader and texture\r<br />http://mew.cx/drawtext/drawtext.html\r<br />\r<br />\r<br />\r<br />[heading]My Other Mod[/heading]\r<br />Enhanced ENB Night Eye\r<br />http://www.nexusmods.com/skyrim/mods/50731",
  "categoryId": "97",
  "version": "1.0",
  "author": "scegielski",
  "createdUnix": "1392091220",
  "updatedUnix": "1392091126",
  "containsAdultContent": false,
  "uploadedBy": "scegielski",
  "primaryFile": null,
  "files": [
    {
      "fileId": "1000096446",
      "name": "EnhancedENBDiagnostics_1_0",
      "version": "1.0",
      "categoryId": "1",
      "categoryName": "MAIN",
      "isPrimary": false,
      "size": "21",
      "fileName": "EnhancedENBDiagnostics_1_0-50991-1-0.7z",
      "uploadedUnix": "1392091126",
      "modVersion": "1.0",
      "virusScanUrl": "https://www.virustotal.com/file/2fbd5982a1dda66c868df2cf4ceebcb542ae9a6f72640ec62c67f2fbc1af1c0b/analysis/1407928624/",
      "changelogHtml": null,
      "cdnName": "Nexus Global Content Delivery Network",
      "downloadUrl": "https://filedelivery.nexusmods.com/110/EnhancedENBDiagnostics_1_0-50991-1-0.7z?fid=1000096446&ttl=1535833050&ri=8192&rs=8192&setec=e08836dbbf67759839d882a92fbbc743"
    }
  ]
}