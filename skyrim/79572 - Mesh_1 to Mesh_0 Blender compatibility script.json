{
  "modId": 79572.0,
  "modName": "Mesh_1 to Mesh_0 Blender compatibility script",
  "summary": "Version 1.0 of a Python script for Blender 2.49b, user friendly, \r<br />for fixing the mesh compatibility issue.",
  "descriptionHtml": "[size=3][b]Mesh_1 toMesh_0 Blender compatibility script[/b]\r<br /> \r<br />\r<br />[b]What is it?[/b]\r<br />A Pythonscript for Blender 2.49b, user friendly, for fixing the mesh incompatibility\r<br />issue.\r<br /> \r<br />\r<br />[b]The mesh incompatibility issue[/b]\r<br />For speed issues, Skyrim needs Mesh_1 and Mesh_0 (for armors, bodies, and clothes only) \r<br />to be equal apart from the 3D coordinates of the nodes. Equal obviously means the\r<br />same number of nodes, edges, triangles and connections, but also the same order\r<br />the vertex are stored in the vertex list inside the nif file. Differences in the meshes \r<br />(incompatibilities hereafter) will produce CTDs or aberrant shapes in game.\r<br />Incompatibilities are hard to identify but, mainly, nearly impossible to correct, \r<br />especially the vertex ordering issue. \r<br />Till now, the only way to fix this was to reshape mesh 1 for producing a new the mash 0\r<br />... (again).\r<br /> \r<br />\r<br />[b]What does this script do?[/b]\r<br />This script builds a copy of Mesh_1 (say Mesh_10) having the same vertex positions of\r<br />Mesh_0, and all the other features of Mesh_1. By exporting Mesh_1 and Mesh_10 will \r<br />give you fully compatible meshes for Skyrim.\r<br />Moreover, this allows to perform operations that usually cannot be done safely once you \r<br />have completed a draft of both mash 0 and 1 (e.g. splitting and merging nodes,\r<br />flipping edges, joining and parting, apply modifiers after building Mesh_0,\r<br />even producing a completely new mesh for Mesh_0). Note that number of nodes,\r<br />edges, triangles and connections between nodes must be the same when you meshes\r<br />are ready, but the way you get that result does not matter when you apply the\r<br />script.\r<br />If the script finds something wrong it highlights the nodes or the triangles it was\r<br />checking in Mesh_0 and / or in Mesh_1 helping you to find and fix the\r<br />incongruence. \r<br />\r<br />\r<br />[b]Other scripts[/b]\r<br />- [b]Mesh_0 Generator[/b] Blender script - http://www.nexusmods.com/skyrim/mods/80506/?\r<br />  Given Body_1, Body_0 and Dress/Armor_1 gives mesh Dress/Armor_0.\r<br />- [b]Mesh X Mirror for Modders[/b] Blender script - http://www.nexusmods.com/skyrim/mods/80503/?\r<br />  Given a &#34;half&#34; Dress/Armor mesh it mirrors: verts positions, bone weights, and UV map of the selected faces.\r<br />- [b]Mesh_0.5[/b] Blender script - http://www.nexusmods.com/skyrim/mods/79663/?\r<br />  Given Mesh_1 and Mesh_0 and a scaling factor (say 0.5) it will return the weighed mesh. Negative scaling gives thinner \r<br />  than Mesh_0, larger than 1 gives a mesh larger than Mesh_1\r<br />\r<br />\r<br />[b]How can I use it?[/b]\r<br />It is pretty simple. Make your mesh 1 and 0 trying, as usual, to keep the same number\r<br />of nodes, faces and the connections. Produce your UV, material, and\r<br />bone-weights on mesh 1 only. Apply the modifiers on both meshes and ensure to\r<br />have both triangulate. Then:\r<br />\r<br />[/size][list=1]\r<br />[*][size=3]unselect all the nodes in both the meshes. [/size]\r<br />[*][size=3]identify an easy-to-find face, and highlight its 3 nodes in both the mashes (node selection mode - Fig.2). Note that this triangle-face must also be made so that the nodes of the face are ordered the same in a given direction in both meshes (say, points A, B and C are clearly in this order along Z direction in both meshes - Fig.3).[/size]\r<br />[*][size=3]in object mode, unselect all, and select Mesh_1 and SHIFT-Right-Click-Select Mesh_0.[/size]\r<br />[*][size=3]go to the tab: &#34;Object &gt; Scripts &gt; Mesh_1 to Mesh_0&#34; and click it (Fig.4).[/size]\r<br />[*][size=3]select the direction for ordering the 3 nodes of the selected face (Fig.5)[/size]\r<br />[/list][size=3]\r<br />Anyway, if you miss something the script will tell you what is wrong (both in Python console\r<br />and in a pop-up box) and giving some hints on how to fix it.\r<br />\r<br />\r<br />[b]How can I be sure it really works?\r<br />[/b]Good question. Here is the answer:\r<br />[/size][list=1]\r<br />[*][size=3]download and install &#34;Mesh_0.5 Blender script&#34; (it makes Mesh_0.5 from Mesh_0 and Mesh_1)[/size]\r<br />[*][size=3]duplicate a mesh object in Blender[/size]\r<br />[*][size=3]in edit mode edit one copy only by selecting and parting some groups of triangles (say at least 3 different groups)[/size]\r<br />[*][size=3]than in object mode join in casual order the parted groups obtaining again the full duplicated mesh[/size]\r<br />[*][size=3]in edit mode remove the doubles in the rejoined mesh[/size]\r<br />[*][size=3]in edit mode reshape a bit the rejoined mesh in order to clearly distinguish it[/size]\r<br />[*][size=3]than apply Mesh_0.5 to the original mesh and the re-joined mesh: you should obtain a confused-no shape mesh (i.e. the vertex order is not the same in the two meshes)[/size]\r<br />[*][size=3]now apply &#34;Mesh_1 to Mesh_0&#34; to the original mesh and the re-joined mesh obtaining a mesh compatible with the first you selected (original or re-rejoined).[/size]\r<br />[*][size=3]apply Mesh_0.5 to the couple of compatible meshes. Now you will obtain a half way mesh between the original and the rejoined.[/size]\r<br />[*][size=3]TATAMMM&#33; :)[/size]\r<br />[/list][size=3]\r<br />\r<br />[b]Implemented checks and analysis\r<br />[/b]While running a number of checks are performed on the meshes in order to identify possible errors and trying to highlight them.\r<br />(checks are reported in the Blender Python Console).\r<br />\r<br />Initialization phase:\r<br />[/size][list=1]\r<br />[*][size=3]if 2 objects are selected[/size]\r<br />[*][size=3]if both are of mesh type[/size]\r<br />[*][size=3]if 3 verts are selected in both[/size]\r<br />[*][size=3]if the verts form a face[/size]\r<br />[*][size=3]if the identification direction is effective in differencing the verts in both meshes[/size]\r<br />[/list][size=3]\r<br />Base checks:\r<br />[/size][list=1]\r<br />[*][size=3]if the number of verts is the same[/size]\r<br />[*][size=3]if the number of faces is the same[/size]\r<br />[*][size=3]if all the verts form faces (i.e. no alone verts)[/size]\r<br />[/list][size=3]\r<br />While running it checks:[/size][list]\r<br />[*][size=3]connected mesh (see below)[/size]\r<br />[*][size=3]same number of faces linked to the same recognized vertex[/size]\r<br />[*][size=3](other things that I&#39;m not sure may actually happen)[/size]\r<br />[/list][size=3]\r<br />\r<br />[b]Connected mesh[/b]\r<br />If the mesh is not fully connected (i.e. some parts are not linked with triangles to the others) than the script will move only the verts of the part including the base selected triangle. To have a full compatatibility mesh you have to apply the script again for any part your mesh is divided in. For instance: if you have 2 parts in the mesh: \r<br />[/size][list=1]\r<br />[*][size=3]apply the script to Mesh_1 and Mesh_0 selecting the same face on both in the first part (say A), and you will obtain &#34;reshape-Mesh_1&#34; with part A corrected as Mesh_0[/size]\r<br />[*][size=3]than highlight 3 verts of a corresponding face in part B of Mesh_0 and in  &#34;reshape-Mesh_1&#34; obtaining a fully compatible mesh.[/size]\r<br />[/list][size=3]You have to repeat this for any additional part.\r<br />\r<br />\r<br />[b]How to install the script[/b]\r<br />Download the file, unzip, and drop it in the folder: &#34;C:&#92;Program Files (x86)&#92;Blender Foundation&#92;Blender&#92;.blender&#92;scripts&#34;, \r<br />or wherever you have the Blender script folder. Then run Blender and it will recognize the script automatically.\r<br />\r<br />\r<br />[b]How does it work?[/b]\r<br />Basically, from the highlighted triangle it goes on, walking triangle by triangle in both\r<br />the meshes, and, each step, moving the nodes. \r<br /> \r<br />\r<br />[b]Credits, Documentation and Software[/b]\r<br />Introductionto Python (http://learnpythonthehardway.org/book/ex24.html)\r<br />Python 2.7 functions (https://docs.python.org/2/library/functions.html)\r<br />Blender functions for Python scripting (https://www.blender.org/api/249PythonDoc)\r<br />Notepad++ (https://notepad-plus-plus.org/)\r<br />Blender 2.49b\r<br />Python 2.7\r<br />The famous &#39;Bone Weight Copy&#39; script by ideasman42 (thanks for your work&#33;) used as a template for writing mine\r<br /> \r<br />\r<br />[b]Bugs and requests[/b]\r<br />Version 1.0, the script works well with all the meshes I tried. Anyway, read carefully the instructions and PM me if something goes wrong. \r<br /> If you have some request PM and I will consider it.\r<br />\r<br />\r<br />[b]Permission[/b]\r<br />Please, do not upload this script on other sites without permission. \r<br /> \r<br />\r<br />[b]A personal note[/b]\r<br />I&#39;m really happy to eventually provide some contribution to the Modders&#39; community.\r<br />(and I was really tired to try again&#33;&#33;)\r<br />[/size]",
  "categoryId": "39",
  "version": "1.0",
  "author": "Letstryagain",
  "createdUnix": "1476916672",
  "updatedUnix": "1477141374",
  "containsAdultContent": false,
  "uploadedBy": "Letstryagain",
  "primaryFile": null,
  "files": [
    {
      "fileId": "1000225176",
      "name": "object_Mesh_1 to Mesh_0.py",
      "version": "1.0",
      "categoryId": "1",
      "categoryName": "MAIN",
      "isPrimary": false,
      "size": "6",
      "fileName": "object_Mesh_1 to Mesh_0.py-79572-1-0.zip",
      "uploadedUnix": "1477141374",
      "modVersion": "1.0",
      "virusScanUrl": "https://www.virustotal.com/file/ffa15a73aae449f8af3bcb23be99e410ae242c26d655b14d184705494d218ca5/analysis/1477141382/",
      "changelogHtml": null,
      "cdnName": "Nexus Global Content Delivery Network",
      "downloadUrl": "https://filedelivery.nexusmods.com/110/object_Mesh_1%20to%20Mesh_0.py-79572-1-0.zip?fid=1000225176&ttl=1535868235&ri=8192&rs=8192&setec=35d5cebe0d168c2763c7946f77ed4ce7"
    }
  ]
}