{
  "modId": 55865.0,
  "modName": "Pex and PexCLI - Papyrus assembler and disassembler",
  "summary": "This tools allows you to create, parse and edit pex files and to setup native, papyrus and skse function hooks",
  "descriptionHtml": "[b][u][size=5]New informations\r<br />[/size][/u][/b][size=5][size=3]Hi everyone, I just released the source code of this tool, it was a huge oversight to let this private (and believe it or not, I thought that the source was available when I left). I&#39;m not going to dev anything anytime soon, I someone wants to update or reupload this, feel free to do it. I definitely think that (re)compiling pex script files (which is what this program does) is a missed opportunity. As for exemple, as soon as you are able to assemble a pex file from nothing (Pex.dll: you can) It&#39;s possible to create an open source programming language that does not suck (papyrus sucks) and compile to a skyrim mod, maybe even something that mixes skse internals and pure pex scripts, the possibilities are infinite.\r<br />That was for the compiling part, now about the recompiling: for programmers, IT IS A BAD PRACTICE, don&#39;t do that, unless you don&#39;t have any other options for what you are trying to achieve and (spoiler alert) there is always another options. Well that&#39;s the theory but in practice there are a lot of severely outdated or incompatible mods with an absent mod author that literally vanished from the Internet without leaving any source code for someone to continue there work if one wants to (Hi there&#33;&#33;) the point is, that it allow to generically update old scripts using [color=#ff0000]outdated features (NetImmerse) to new ones (Nioverride) *wink* *wink* *wink*[/color] without even having to update every single mod by yourself, a script does it all. If you are creating a library and you are changing some core functionality and are forced to break retro compatibility, The best thing to do is to let mods author update their mods however it&#39;s not always going to happens and sometimes having a script that roughly does most of the update is actually an OK fall-back solution even if the update is not perfect or may break the mod, this mod is already lost anyway so there&#39;s nothing to loose.\r<br />\r<br />Oh and concerning the HooKmmerse thing: it does not fall in the category where recompilation is OK, actually it the typical exemple of &#34;there is always a better solution&#34; and this solution was basically to create a native hook to the Set/GetNodeScale function so you can monitor everything from within without even having to touch any script file (that&#39;s for the solution in a imperfect world). If the world was perfect, SetNodeScale would not even have been allowed to exists in a first place since it&#39;s starts to create a conflict as soon as two mods doing the same thing are installed, they have no ways to know that there is another mod doing the same thing. That&#39;s what Nioverride added and that&#39;s what a buff system in a video game usually does (handling conflict on specific values, it exists in skyrim but node scales is not among those values)\r<br />\r<br />TL;DR: compilation is awesome, recompilation is ok for outdated mods, respect the buffs.[/size][/size]\r<br />[b][u]\r<br />\r<br />\r<br />\r<br />[size=5]OLD DESCRIPTION[/size]\r<br />\r<br />\r<br />\r<br />What is it for an user?[/u][/b]\r<br />It&#39;s an utility that allows modders to customize their/other modders&#39; scripts with informations on you computer. Note that when you download a mod, this mod knows nothing about the mods you already have. With this tool, mods will be able to search incompatible patterns in your other mods and fix them. as for example. I&#39;ll release a mod soon using this tool. Stay tunned\r<br />\r<br />[b][u]What is it for a modder?[/u][/b]\r<br />It&#39;s a C# dll and a command line tool that load and save *.pex files used by skyrim to store compiled script files. See it as an assembler/disassembler for skyrim with a scripting langage allowing you to release a mod that will install hooks or metadata relative to the user&#39;s computer in your/other modders&#39; script files\r<br />\r<br />[b][u]Mods using this file so far: [/u][/b]\r<br />[list][*][url=http://www.nexusmods.com/skyrim/mods/55869/?]HooKmmerse - mod sandbox by nem-e5i5[/url]\r<br />[/list]\r<br />[b][u]How to use it as an user?[/u][/b]\r<br />The GUI contains the required informations now\r<br />[b][u]\r<br />/&#33;&#92; Mod Organizer /&#33;&#92;[/u][/b] : to use this software with Mod Organizer you must add it in the executable list and in &#34;Arguments&#34; put:\r<br />[code]-mo &#34;{mod organizer directory}&#92;mods&#34; &#34;{mod organizer directory}&#92;overwrite&#34; &#34;{mod organizer directory}&#92;mods&#92;Pex and PexCLI - Papyrus assembler and disassembler&#92;scripts&#34;[/code]\r<br />like this:\r<br />[img]http://nsa34.casimages.com/img/2014/09/17/140917093538732757.jpg[/img]\r<br />as for example, {mod organizer directory} is C:&#92;Program Files (x86)&#92;Mod Organizer for me, it should be the same for many of you\r<br />then note that Pex must have the top priority (and be at the very bottom of the list), it&#39;s really important since it overwrite some scripts in other mods\r<br />\r<br />[b][u]How to use it as a modder?[/u][/b] - some obsolete stuff here\r<br />since pex.dll is written in C#, you&#39;ll have to use some C# - VB.NET - F# - C++/CX or any .NET compatible langage. I strongly recommand you to download Visual studio Express for C#, that is free.\r<br />\r<br />There is two ways to use this tool, with the CLI or as a DLL. In the two cases you probably want to read the doxygen documentation available [url=http://ocean.olympe.in/PexDoc/]here[/url]\r<br />\r<br />When you use this tool as a dll, you&#39;ll have to load/save/open files manually using PexFile.Load/SaveFile(string fileName). Use the debugger and you&#39;ll be fine. You can follow a tutorial on the internet if you never used C# before. Note that pex.dll is shared, don&#39;t ship it with you mod. instead use [url=http://msdn.microsoft.com/en-us/library/1009fa28.aspx]System.Reflection.Assembly.LoadFrom[/url]. Your .exe should install to data/tools/pex/mods. Try to provide a file &#34;your_mod_name.bat&#34; containing the command to install the mode and &#34;del your_mod_name.bat&#34; containing the command to uninstall it in the same folder as the .exe.\r<br />\r<br />Whe you use this tool as a cli, you don&#39;t need visual studio, it works as a scripted installer/uninstaller using c# as scripting language (note that the file extension is .csx). here is an example script:\r<br />[code]value.machineName.content = &#34;THIS IS PRIVAAAAAAAATE&#34;;\r<br />return true;\r<br />end[/code]\r<br />as you can see this script, hide the machine name field, that should not even be present in the compiled script (ty bethesda btw). Note that return true; means that the script edited the file and that the file must be overwritten (return false means that the file was only consulted and that it&#39;s not nessessary to save the modifications). end means that every lines that follow must be ignored. It must be present at the end of the script. value is an instance of Pex.PexFile (see documentation) reprensenting the current file.\r<br />Note that you can&#39;t create methods since nested methods are not allowed in C#, instead you can use lambda expressions like this:\r<br />[code]\r<br />System.Func&lt;int, int, int&gt; MyCoolFunction = (x, y) =&gt; {\r<br />    return x + y;\r<br />};\r<br />Console.WriteLine(MyCoolFunction(2, 2)); //print &#34;4&#34;\r<br />[/code]\r<br />To run a script use the command &#34;type my_script.csx | PexCLI.exe file1.pex file2.pex file3.pex&#34;\r<br />Explaination: type myscript.csx echo the script in the standard output, the pipe &#34;|&#34; connect the previous standard output to the next standard input and the list of file are just command line arguments for PexCLI.exe\r<br />Note that you can use PexCLI.exe -all file1.pex file2.pex file3.pex that will proceed all files EXCEPT those passed as argument. It&#39;s especially useful to setup hooks since you most likely want to hook all files but the hook handler\r<br />Just like  when  you use this tool as a dll, create a &#34;your_mod_name.bat&#34; and a &#34;del your_mod_name.bat&#34; to respectively run the command to install and uninstall your mod, since users are not always familiar with windows&#39; command prompt.\r<br />\r<br />[b][u]Final note[/u][/b]\r<br />As a final note I&#39;ll use this tool a lot, if you want to use it too, don&#39;t forget to check my other mods using this tool, They&#39;ll all be open source it&#39;ll serve as examples. My method is to use visual studio and the dll to develop and debug. and then I use the CLI to deploy the file more easily, I think it&#39;s the best compromise. Finaly I think that users will not comment a lot about that, so feel free to ask questio about this tool or about pex files in general, I always answer questions  even if even a 8 years old kid do less english mistakes than me",
  "categoryId": "39",
  "version": "0.2.0.2",
  "author": "nem-e5i5",
  "createdUnix": "1405082738",
  "updatedUnix": "1445555023",
  "containsAdultContent": false,
  "uploadedBy": "neme5i5",
  "primaryFile": null,
  "files": [
    {
      "fileId": "1000117008",
      "name": "Pex - PexCLI",
      "version": "0.1.0.0",
      "categoryId": "4",
      "categoryName": "OLD_VERSION",
      "isPrimary": false,
      "size": "10",
      "fileName": "Pex - PexCLI-55865-0-1-0-0.7z",
      "uploadedUnix": "1405082733",
      "modVersion": "0.1.0.0",
      "virusScanUrl": "https://www.virustotal.com/file/92c23dd384f325a23034f19a2a1fdd93d86295018a10d73ed29aa3e9f153280c/analysis/1405082764/",
      "changelogHtml": null,
      "cdnName": "Nexus Global Content Delivery Network",
      "downloadUrl": "https://filedelivery.nexusmods.com/110/Pex%20-%20PexCLI-55865-0-1-0-0.7z?fid=1000117008&ttl=1535840869&ri=8192&rs=8192&setec=e18a7570aed1dcb43b456da2c0bcff6b"
    },
    {
      "fileId": "1000127277",
      "name": "Pex - PexGUI",
      "version": "0.2.0.0",
      "categoryId": "4",
      "categoryName": "OLD_VERSION",
      "isPrimary": false,
      "size": "14",
      "fileName": "Pex - PexGUI-55865-0-2-0-0.7z",
      "uploadedUnix": "1410981071",
      "modVersion": "0.2.0.0",
      "virusScanUrl": "https://www.virustotal.com/file/74401f07ffdc40c0f8c3aabc586b11daa0d3e8a007529e56c85964b60858dee5/analysis/1410981182/",
      "changelogHtml": null,
      "cdnName": "Nexus Global Content Delivery Network",
      "downloadUrl": "https://filedelivery.nexusmods.com/110/Pex%20-%20PexGUI-55865-0-2-0-0.7z?fid=1000127277&ttl=1535840870&ri=8192&rs=8192&setec=63427875aca095331bce480fad3666a5"
    },
    {
      "fileId": "1000127417",
      "name": "Pex - PexGUI",
      "version": "0.2.0.1",
      "categoryId": "4",
      "categoryName": "OLD_VERSION",
      "isPrimary": false,
      "size": "16",
      "fileName": "Pex - PexGUI-55865-0-2-0-1.7z",
      "uploadedUnix": "1411072777",
      "modVersion": "0.2.0.1",
      "virusScanUrl": "https://www.virustotal.com/file/ad63545a2344a9e43b3dbfd2ed5442086de949c920bc4324d5d8914072cb3243/analysis/1411072862/",
      "changelogHtml": null,
      "cdnName": "Nexus Global Content Delivery Network",
      "downloadUrl": "https://filedelivery.nexusmods.com/110/Pex%20-%20PexGUI-55865-0-2-0-1.7z?fid=1000127417&ttl=1535840870&ri=8192&rs=8192&setec=d5d36e05d6362c936fec7a20174b3cc7"
    },
    {
      "fileId": "1000127550",
      "name": "Pex - PexGUI",
      "version": "0.2.0.2",
      "categoryId": "1",
      "categoryName": "MAIN",
      "isPrimary": false,
      "size": "17",
      "fileName": "Pex - PexGUI-55865-0-1-0-2.7z",
      "uploadedUnix": "1411148277",
      "modVersion": "0.2.0.2",
      "virusScanUrl": "https://www.virustotal.com/file/060490a9642cfe184dfda2467f1afd4bca31bc9e41ec6eff90c990f7e98b8180/analysis/1411148342/",
      "changelogHtml": null,
      "cdnName": "Nexus Global Content Delivery Network",
      "downloadUrl": "https://filedelivery.nexusmods.com/110/Pex%20-%20PexGUI-55865-0-1-0-2.7z?fid=1000127550&ttl=1535840871&ri=8192&rs=8192&setec=9c7daee6dd453eb13c958c7982168f66"
    },
    {
      "fileId": "1000181986",
      "name": "source code",
      "version": "",
      "categoryId": "1",
      "categoryName": "MAIN",
      "isPrimary": false,
      "size": "33934",
      "fileName": "source code-55865-.7z",
      "uploadedUnix": "1445555023",
      "modVersion": null,
      "virusScanUrl": "https://www.virustotal.com/file/db47a20a7f3d37517c255fc35e705c3c95f2a6692ba8bdbfa63a215824b145b0/analysis/1445555050/",
      "changelogHtml": null,
      "cdnName": "Nexus Global Content Delivery Network",
      "downloadUrl": "https://filedelivery.nexusmods.com/110/source%20code-55865-.7z?fid=1000181986&ttl=1535840871&ri=8192&rs=8192&setec=a58c5973722e203b5794c5dafce69e0a"
    }
  ]
}